name: CI

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']
  workflow_dispatch:

jobs:
  Android:
    runs-on: macos-12
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        react-native-version: ['0.71.1']
        architecture: ['Paper', 'Fabric']
        runtime: ['JSC', 'Hermes']
        mode: ['debug', 'release']
        # exclude:
        #   - react-native-version: '0.68.4'
        #     architecture: 'Fabric'
    env:
      E2E_REACT_NATIVE_VERSION: ${{ matrix.react-native-version }}
      E2E_ARCHITECTURE: ${{ matrix.architecture }}
      E2E_RUNTIME: ${{ matrix.runtime }}
      E2E_MODE: ${{ matrix.mode }}
      E2E_PLATFORM: Android
      E2E_APP_NAME: MyApp
      E2E_APP_PATH: ${{ github.workspace }}/MyApp
      E2E_REACT_NATIVE_MINOR_VERSION: 71
    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v3

      - name: Validate config
        run: ./ValidateConfig.sh

      - name: Create React Native app
        run: ./CreateApp.sh
        timeout-minutes: 5

      - name: Copy app files
        run: ./CopyAppFiles.sh

      - name: Edit package.json
        run: ./EditPackageJson.sh

      - name: Install Yarn dependencies
        run: ./InstallYarnDependencies.sh
        timeout-minutes: 10

      - name: Lint with Prettier
        run: ./LintWithPrettier.sh

      - name: Lint with ESLint
        run: ./LintWithESLint.sh

      - name: Check types
        run: ./CheckTypes.sh

      - name: Select architecture
        run: ./SelectArchitecture.sh

      - name: Select runtime
        run: ./SelectRuntime.sh

      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Create Android emulator
        timeout-minutes: 10
        run: |
          # brew install intel-haxm
          # Install AVD files
          echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install 'system-images;android-27;default;x86_64'
          echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          
          # Create emulator
          $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n Pixel_API_29_AOSP -d pixel --package 'system-images;android-27;default;x86_64'
          $ANDROID_HOME/emulator/emulator -list-avds
          
      - name: Start Android emulator
        timeout-minutes: 10
        run: |
          echo "Starting emulator and waiting for boot to complete...."
          ls -la $ANDROID_HOME/emulator
          nohup $ANDROID_HOME/tools/emulator -avd Pixel_API_29_AOSP -gpu host -no-audio -no-boot-anim -camera-back none -camera-front none -qemu -m 2048 2>&1 &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do echo "wait..."; sleep 1; done; input keyevent 82'
          echo "Emulator has finished booting"
          $ANDROID_HOME/platform-tools/adb devices
          sleep 30

      - name: Launch Metro bundler
        run: ./LaunchMetroBundler.sh

      - name: Launch Appium server
        run: ./LaunchAppiumServer.sh

      - name: Build app
        run: ./BuildApp.sh
        timeout-minutes: 40

      - name: Run E2E tests
        run: ./RunTests.sh
        timeout-minutes: 15
